name: Build and test.

permissions: {}

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

jobs:
  build_wheels_and_test:
    name: Build and test
    permissions:
      contents: read
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # macos-13-xlarge is arm
        #os: ["windows-2022", "ubuntu-24.04", "ubuntu-24.04-arm", "macos-13", "macos-13-xlarge"]
        #python-version: ["3.13", "3.12", "3.11", "3.10", "3.9", "3.8", "3.7"]
        #os: ["ubuntu-24.04", "ubuntu-24.04-arm"]
        #python-version: ["3.13", "3.12", "3.11", "3.10", "3.9", "3.8", "3.7"]
        os: ["ubuntu-24.04-arm"]
        #python-version: ["3.10"]
        python-version: ["3.14"]
    steps:
      # No need 
      #- name: Install prerequisites
      #  run: |
      #    sudo apt-get update
      #    sudo apt-get install libboost-all-dev libgsl0-dev libeigen3-dev

      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - name: Build and run tests using binaries
        run: |
          cd similarity_search
          # No extras at least for now
          #cmake . -DWITH_EXTRAS=1
          cmake .
          make -j 8
          ./release/bunit
          #./release/test_integr
          make clean

      - name: Build and repair Linux wheels
        env:
          PYTHON: ${{ matrix.python-version }}
        run: ./build_linux_wheels/deploy.sh

      # Upload artifacts
      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.python-version }}-${{ matrix.os }}
          path: ${{ startsWith(matrix.os, 'ubuntu') && 'python_bindings/dist/*.whl' }}


  aggregate:
    needs:
      - build_wheels_and_test
    runs-on: ubuntu-24.04
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: combined-artifacts

      - name: Show combined contents (optional)
        run: ls -R combined-artifacts

      - name: Upload combined artifact
        uses: actions/upload-artifact@v4
        with:
          name: all-platform-builds
          path: combined-artifacts/
